"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[2629],{24595:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=i(85893),t=i(11151);const r={sidebar_position:2},a="Design",o={id:"backend/design",title:"Design",description:"Database Schema",source:"@site/docs/backend/design.md",sourceDirName:"backend",slug:"/backend/design",permalink:"/document/docs/backend/design",draft:!1,unlisted:!1,editUrl:"https://github.com/ByteType/document/docs/backend/design.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Instruction",permalink:"/document/docs/backend/instruction"},next:{title:"Progress",permalink:"/document/docs/backend/progress"}},c={},d=[{value:"Database Schema",id:"database-schema",level:2},{value:"APIs and Logic",id:"apis-and-logic",level:2}];function l(e){const n={h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"design",children:"Design"}),"\n",(0,s.jsx)(n.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,s.jsx)(n.p,{children:"The USER entity is central, representing the different types of users - guest, consumers, delivery drivers, and\npotentially administrators. This directly relates to the three kinds of users mentioned in the instructions.\nThe ROLE entity, in conjunction with the USER_ROLE junction table, facilitates role-based access, essential\nfor distinguishing between consumer users, drivers, and any other roles within the system."}),"\n",(0,s.jsx)(n.p,{children:"The PARCEL entity captures detailed information about each parcel, such as dimensions, mass, and status, which\naligns with the requirement for tracking parcel information and history in the consumer user app (C3). The LOCKER\nand CABINET entities are crucial for simulating the parcel locker system, reflecting the physical infrastructure\nwhere parcels are stored and retrieved. This directly corresponds to the functionality required in the parcel\nlocker touchscreen simulator (TS2, TS3) and driver app (D2, D3, D4)."}),"\n",(0,s.jsx)(n.p,{children:"Moreover, the relationships between these entities are thoughtfully designed. For example, the connection between\nUSER and PARCEL (for sending and receiving parcels) underpins the fundamental operations of sending and receiving\nparcels as required in the consumer user app (C6) and driver app (D3, D4). The linkage between PARCEL and CABINET\n(storedIn) is pivotal for the functionality where parcels are assigned to specific cabinets, which is integral to\nboth the parcel locker simulator and the driver app functionalities."}),"\n",(0,s.jsx)(n.mermaid,{value:"erDiagram\n    USER ||--o{ USER_ROLE : has\n    ROLE ||--o{ USER_ROLE : has\n    USER ||--o{ PARCEL : sends\n    USER ||--o{ PARCEL : receives\n    PARCEL ||--o{ CABINET : storedIn\n    LOCKER ||--o{ CABINET : contains\n\n    USER {\n        Long id PK\n        String username\n        String email\n        String password\n        String phone\n        String address\n    }\n\n    ROLE {\n        Long id PK\n        RoleType name\n    }\n\n    PARCEL {\n        Long id PK\n        Double width\n        Double height\n        Double depth\n        Double mass\n        LocalDateTime readyForPickupAt\n        LocalDateTime pickedUpAt\n        ParcelStatus status\n        String pickupCode\n    }\n\n    LOCKER {\n        Long id PK\n        String location\n    }\n\n    CABINET {\n        Long id PK\n        Boolean isLocked\n    }\n\n    USER_ROLE {\n        Long user_id FK\n        Long role_id FK\n    }"}),"\n",(0,s.jsx)(n.h2,{id:"apis-and-logic",children:"APIs and Logic"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Authentication Logic"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implements JWT or session-based authentication for secure user sessions."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Parcel Creation & Allocation Logic"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Allocates new parcels to free cabinets in selected lockers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Cabinet Opening Logic"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Validates codes and opens the corresponding cabinet for parcel pickup or delivery."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Notification Logic"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Triggers email notifications when parcels are ready for pickup."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);